#include<iostream>
#include<algorithm>
using namespace std ;
int s[21] ;
int used[21] ;
int N , M , a ;	//用例数，棍数，正方形边长 
int sign ;	//1-满足正方形条件 
bool compare( int a , int b )
{
	return a > b ;
}
void dfs( int cnt , int i , int len )
{	//已凑到cnt条边，已搜索至i，当前长度len 
	if ( cnt >= 3 )
	{
		sign = 1 ;
		return ;	
	}
	if ( len == a )
	{
		dfs( cnt+1 , 1 , 0 ) ;
		if ( sign )
			return ;
	}
	for ( int j = i+1 ; j <= M ; j++ )
	{
		if ( !used[j] && len+s[j] <= a )
		{
			used[j] = 1 ;
			dfs( cnt , j , len+s[j] ) ;
			if ( sign )
				return ;
			used[j] = 0 ;				
		}			
	}	 
}

int main()
{
	cin >> N ;
	while ( N-- )
	{
		cin >> M ;
		sign = a = 0 ;
		for ( int i = 1 ; i <= M ; i++ )
		{
			cin >> s[i] ;
			a += s[i] ;
			used[i] = 0 ;
		}
		if ( a % 4 != 0 )
		{
			cout << "no" << endl ;
			continue ;
		}
		a /= 4 ;	//正方形边长 
		sort( s+1 , s+1+M , compare ) ;	//从大到小 
		if ( s[1] > a )
		{
			cout << "no" << endl ;
			continue ;
		}
		dfs( 0 , 1 , s[1] ) ;
		if ( sign )
			cout << "yes" << endl ;
		else
			cout << "no" << endl ;
	}
	return 0 ;
}
